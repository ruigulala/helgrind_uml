# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.all.am $(top_srcdir)/Makefile.core.am \
	$(top_srcdir)/Makefile.flags.am
bin_PROGRAMS = valgrind-listener$(EXEEXT)
noinst_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2)
@BUILD_MPIWRAP_PRI_TRUE@am__append_1 = libmpiwrap-@VG_PLATFORM_PRI@.so
@BUILD_MPIWRAP_SEC_TRUE@am__append_2 = libmpiwrap-@VG_PLATFORM_SEC@.so
subdir = auxprogs
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
@BUILD_MPIWRAP_PRI_TRUE@am__EXEEXT_1 = libmpiwrap-@VG_PLATFORM_PRI@.so$(EXEEXT)
@BUILD_MPIWRAP_SEC_TRUE@am__EXEEXT_2 = libmpiwrap-@VG_PLATFORM_SEC@.so$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
libmpiwrap_@VG_PLATFORM_PRI@_so_SOURCES =  \
	libmpiwrap-@VG_PLATFORM_PRI@.c
libmpiwrap_@VG_PLATFORM_PRI@_so_OBJECTS =  \
	libmpiwrap-@VG_PLATFORM_PRI@.$(OBJEXT)
libmpiwrap_@VG_PLATFORM_PRI@_so_LDADD = $(LDADD)
libmpiwrap_@VG_PLATFORM_SEC@_so_SOURCES =  \
	libmpiwrap-@VG_PLATFORM_SEC@.c
libmpiwrap_@VG_PLATFORM_SEC@_so_OBJECTS =  \
	libmpiwrap-@VG_PLATFORM_SEC@.$(OBJEXT)
libmpiwrap_@VG_PLATFORM_SEC@_so_LDADD = $(LDADD)
am_valgrind_listener_OBJECTS =  \
	valgrind_listener-valgrind-listener.$(OBJEXT)
valgrind_listener_OBJECTS = $(am_valgrind_listener_OBJECTS)
valgrind_listener_LDADD = $(LDADD)
SCRIPTS = $(noinst_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = libmpiwrap-@VG_PLATFORM_PRI@.c \
	libmpiwrap-@VG_PLATFORM_SEC@.c $(valgrind_listener_SOURCES)
DIST_SOURCES = libmpiwrap-@VG_PLATFORM_PRI@.c \
	libmpiwrap-@VG_PLATFORM_SEC@.c $(valgrind_listener_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD_MPIWRAP_PRI_FALSE = @BUILD_MPIWRAP_PRI_FALSE@
BUILD_MPIWRAP_PRI_TRUE = @BUILD_MPIWRAP_PRI_TRUE@
BUILD_MPIWRAP_SEC_FALSE = @BUILD_MPIWRAP_SEC_FALSE@
BUILD_MPIWRAP_SEC_TRUE = @BUILD_MPIWRAP_SEC_TRUE@
BUILD_SSE3_TESTS_FALSE = @BUILD_SSE3_TESTS_FALSE@
BUILD_SSE3_TESTS_TRUE = @BUILD_SSE3_TESTS_TRUE@
CC = @CC@
CCAS = @CCAS@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFAULT_SUPP = @DEFAULT_SUPP@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISTCHECK_CONFIGURE_FLAGS = @DISTCHECK_CONFIGURE_FLAGS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FLAG_FNO_STACK_PROTECTOR = @FLAG_FNO_STACK_PROTECTOR@
FLAG_M32 = @FLAG_M32@
FLAG_M64 = @FLAG_M64@
FLAG_MAIX32 = @FLAG_MAIX32@
FLAG_MAIX64 = @FLAG_MAIX64@
FLAG_MMMX = @FLAG_MMMX@
FLAG_MSSE = @FLAG_MSSE@
FLAG_WDECL_AFTER_STMT = @FLAG_WDECL_AFTER_STMT@
GDB = @GDB@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MPI_CC = @MPI_CC@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PREFERRED_STACK_BOUNDARY = @PREFERRED_STACK_BOUNDARY@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VALT_LOAD_ADDRESS = @VALT_LOAD_ADDRESS@
VERSION = @VERSION@
VEX_DIR = @VEX_DIR@
VGO_AIX5_FALSE = @VGO_AIX5_FALSE@
VGO_AIX5_TRUE = @VGO_AIX5_TRUE@
VGO_LINUX_FALSE = @VGO_LINUX_FALSE@
VGO_LINUX_TRUE = @VGO_LINUX_TRUE@
VGP_AMD64_LINUX_FALSE = @VGP_AMD64_LINUX_FALSE@
VGP_AMD64_LINUX_TRUE = @VGP_AMD64_LINUX_TRUE@
VGP_HAVE_SECONDARY_FALSE = @VGP_HAVE_SECONDARY_FALSE@
VGP_HAVE_SECONDARY_TRUE = @VGP_HAVE_SECONDARY_TRUE@
VGP_PPC32_AIX5_FALSE = @VGP_PPC32_AIX5_FALSE@
VGP_PPC32_AIX5_TRUE = @VGP_PPC32_AIX5_TRUE@
VGP_PPC32_LINUX_FALSE = @VGP_PPC32_LINUX_FALSE@
VGP_PPC32_LINUX_TRUE = @VGP_PPC32_LINUX_TRUE@
VGP_PPC64_AIX5_FALSE = @VGP_PPC64_AIX5_FALSE@
VGP_PPC64_AIX5_TRUE = @VGP_PPC64_AIX5_TRUE@
VGP_PPC64_LINUX_FALSE = @VGP_PPC64_LINUX_FALSE@
VGP_PPC64_LINUX_TRUE = @VGP_PPC64_LINUX_TRUE@
VGP_X86_LINUX_FALSE = @VGP_X86_LINUX_FALSE@
VGP_X86_LINUX_TRUE = @VGP_X86_LINUX_TRUE@
VG_ARCH = @VG_ARCH@
VG_ARCH_ALL = @VG_ARCH_ALL@
VG_OS = @VG_OS@
VG_PLATFORM_PRI = @VG_PLATFORM_PRI@
VG_PLATFORM_SEC = @VG_PLATFORM_SEC@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
valdir = $(libdir)/valgrind
inplacedir = $(top_builddir)/.in_place
add_includes_x86_linux = -I$(top_srcdir)/coregrind \
		-I$(top_srcdir) \
		-I$(top_srcdir)/coregrind/x86 \
		-I$(top_srcdir)/coregrind/linux \
		-I$(top_srcdir)/coregrind/x86-linux \
		-I$(top_srcdir)/include \
		-I@VEX_DIR@/pub \
		-DVG_PLATFORM="\"x86-linux\"" \
		-DVGA_x86=1 \
		-DVGO_linux=1 \
		-DVGP_x86_linux=1

add_includes_amd64_linux = -I$(top_srcdir)/coregrind \
		-I$(top_srcdir) \
		-I$(top_srcdir)/coregrind/amd64 \
		-I$(top_srcdir)/coregrind/linux \
		-I$(top_srcdir)/coregrind/amd64-linux \
		-I$(top_srcdir)/include \
		-I@VEX_DIR@/pub \
		-DVG_PLATFORM="\"amd64-linux\"" \
		-DVGA_amd64=1 \
		-DVGO_linux=1 \
		-DVGP_amd64_linux=1

add_includes_ppc32_linux = -I$(top_srcdir)/coregrind \
		-I$(top_srcdir) \
		-I$(top_srcdir)/coregrind/ppc32 \
		-I$(top_srcdir)/coregrind/linux \
		-I$(top_srcdir)/coregrind/ppc32-linux \
		-I$(top_srcdir)/include \
		-I@VEX_DIR@/pub \
		-DVG_PLATFORM="\"ppc32-linux\"" \
		-DVGA_ppc32=1 \
		-DVGO_linux=1 \
		-DVGP_ppc32_linux=1

add_includes_ppc64_linux = -I$(top_srcdir)/coregrind \
		-I$(top_srcdir) \
		-I$(top_srcdir)/coregrind/ppc64 \
		-I$(top_srcdir)/coregrind/linux \
		-I$(top_srcdir)/coregrind/ppc64-linux \
		-I$(top_srcdir)/include \
		-I@VEX_DIR@/pub \
		-DVG_PLATFORM="\"ppc64-linux\"" \
		-DVGA_ppc64=1 \
		-DVGO_linux=1 \
		-DVGP_ppc64_linux=1

add_includes_ppc32_aix5 = -I$(top_srcdir)/coregrind \
		-I$(top_srcdir) \
		-I$(top_srcdir)/coregrind/ppc32 \
		-I$(top_srcdir)/coregrind/aix5 \
		-I$(top_srcdir)/coregrind/ppc32-aix5 \
		-I$(top_srcdir)/include \
		-I@VEX_DIR@/pub \
		-DVG_PLATFORM="\"ppc32-aix5\"" \
		-DVGA_ppc32=1 \
		-DVGO_aix5=1 \
		-DVGP_ppc32_aix5=1

add_includes_ppc64_aix5 = -I$(top_srcdir)/coregrind \
		-I$(top_srcdir) \
		-I$(top_srcdir)/coregrind/ppc64 \
		-I$(top_srcdir)/coregrind/aix5 \
		-I$(top_srcdir)/coregrind/ppc64-aix5 \
		-I$(top_srcdir)/include \
		-I@VEX_DIR@/pub \
		-DVG_PLATFORM="\"ppc64-aix5\"" \
		-DVGA_ppc64=1 \
		-DVGO_aix5=1 \
		-DVGP_ppc64_aix5=1


# Baseline flags for all compilations.  Aim here is to maximise
# performance and get whatever useful warnings we can out of gcc.
AM_CFLAGS_BASE = -O2 -g -Wmissing-prototypes -Wall -Wshadow \
                 -Wpointer-arith -Wstrict-prototypes -Wmissing-declarations \
                 -fno-strict-aliasing


# These flags are used for building the preload shared objects.
# The aim is to give reasonable performance but also to have good
# stack traces, since users often see stack traces extending 
# into (and through) the preloads.
AM_CFLAGS_PIC = -O -g -fpic -fno-omit-frame-pointer -fno-strict-aliasing

# Flags for specific targets
AM_FLAG_M3264_X86_LINUX = @FLAG_M32@
AM_CPPFLAGS_X86_LINUX = $(add_includes_x86_linux)
AM_CFLAGS_X86_LINUX = $(WERROR) @FLAG_M32@ @PREFERRED_STACK_BOUNDARY@ \
			 	$(AM_CFLAGS_BASE)

AM_CCASFLAGS_X86_LINUX = $(add_includes_x86_linux) @FLAG_M32@ -g
AM_FLAG_M3264_AMD64_LINUX = @FLAG_M64@
AM_CPPFLAGS_AMD64_LINUX = $(add_includes_amd64_linux)
AM_CFLAGS_AMD64_LINUX = $(WERROR) @FLAG_M64@ -fomit-frame-pointer \
				@PREFERRED_STACK_BOUNDARY@ $(AM_CFLAGS_BASE)

AM_CCASFLAGS_AMD64_LINUX = $(add_includes_amd64_linux) @FLAG_M64@ -g
AM_FLAG_M3264_PPC32_LINUX = @FLAG_M32@
AM_CPPFLAGS_PPC32_LINUX = $(add_includes_ppc32_linux)
AM_CFLAGS_PPC32_LINUX = $(WERROR) @FLAG_M32@ $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC32_LINUX = $(add_includes_ppc32_linux) -Wa,-maltivec @FLAG_M32@ -g
AM_FLAG_M3264_PPC64_LINUX = @FLAG_M64@
AM_CPPFLAGS_PPC64_LINUX = $(add_includes_ppc64_linux)
AM_CFLAGS_PPC64_LINUX = $(WERROR) @FLAG_M64@ $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC64_LINUX = $(add_includes_ppc64_linux) -Wa,-maltivec @FLAG_M64@ -g
AM_FLAG_M3264_PPC32_AIX5 = @FLAG_MAIX32@
AM_CPPFLAGS_PPC32_AIX5 = $(add_includes_ppc32_aix5)
AM_CFLAGS_PPC32_AIX5 = $(WERROR) @FLAG_MAIX32@ -mcpu=powerpc $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC32_AIX5 = $(add_includes_ppc32_aix5) \
				@FLAG_MAIX32@ -mcpu=powerpc -g

AM_FLAG_M3264_PPC64_AIX5 = @FLAG_MAIX64@
AM_CPPFLAGS_PPC64_AIX5 = $(add_includes_ppc64_aix5)
AM_CFLAGS_PPC64_AIX5 = $(WERROR) @FLAG_MAIX64@ -mcpu=powerpc64 $(AM_CFLAGS_BASE)
AM_CCASFLAGS_PPC64_AIX5 = $(add_includes_ppc64_aix5) \
				@FLAG_MAIX64@ -mcpu=powerpc64 -g


# Flags for the primary target.  These must be used to build the
# regtests and performance tests.  In fact, these must be used to
# build anything which is built only once on a dual-arch build.
#
AM_FLAG_M3264_PRI = $(AM_FLAG_M3264_@VG_PLATFORM_PRI@)
AM_CPPFLAGS_PRI = $(AM_CPPFLAGS_@VG_PLATFORM_PRI@)
AM_CFLAGS_PRI = $(AM_CFLAGS_@VG_PLATFORM_PRI@)
AM_CCASFLAGS_PRI = $(AM_CCASFLAGS_@VG_PLATFORM_PRI@)
@VGP_HAVE_SECONDARY_FALSE@AM_FLAG_M3264_SEC = 
@VGP_HAVE_SECONDARY_TRUE@AM_FLAG_M3264_SEC = $(AM_FLAG_M3264_@VG_PLATFORM_SEC@)

# Baseline link flags for making dynamic shared objects.
#
PRELOAD_LDFLAGS_COMMON_LINUX = -nostdlib -shared -Wl,-z,interpose,-z,initfirst
PRELOAD_LDFLAGS_COMMON_AIX5 = -nostdlib -shared -Wl,-G -Wl,-bnogc
PRELOAD_LDFLAGS_X86_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) @FLAG_M32@
PRELOAD_LDFLAGS_AMD64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) @FLAG_M64@
PRELOAD_LDFLAGS_PPC32_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) @FLAG_M32@
PRELOAD_LDFLAGS_PPC64_LINUX = $(PRELOAD_LDFLAGS_COMMON_LINUX) @FLAG_M64@
PRELOAD_LDFLAGS_PPC32_AIX5 = $(PRELOAD_LDFLAGS_COMMON_AIX5)  @FLAG_MAIX32@
PRELOAD_LDFLAGS_PPC64_AIX5 = $(PRELOAD_LDFLAGS_COMMON_AIX5)  @FLAG_MAIX64@
noinst_SCRIPTS = gen-mdg DotToScc.hs Merge3Way.hs primes.c \
		gsl16test gsl16-badfree.patch gsl16-wavelet.patch \
		gsl19test \
		ppcfround.c ppc64shifts.c libmpiwrap.c mpiwrap_type_test.c \
		aix5_VKI_info.c libmpiwrap_aix5.exp \
		aix5_proc_self_sysent.c \
		posixtestsuite-1.5.1-diff-results \
		posixtestsuite-1.5.1-diff.txt

EXTRA_DIST = $(noinst_SCRIPTS)

#------------------------- listener -----------------------
# Build valgrind_listener for the primary target only.
#
valgrind_listener_SOURCES = valgrind-listener.c
valgrind_listener_CPPFLAGS = $(AM_CPPFLAGS_PRI)
valgrind_listener_CFLAGS = $(AM_CFLAGS_PRI)
valgrind_listener_CCASFLAGS = $(AM_CCASFLAGS_PRI)
valgrind_listener_LDFLAGS = $(AM_CFLAGS_PRI)
@VGO_AIX5_FALSE@HACKY_FLAGS_PRI = -g -O -fno-omit-frame-pointer -Wall -fpic -shared \
@VGO_AIX5_FALSE@			$(AM_FLAG_M3264_PRI)

#
#----------------------------------------------------------

#------------------------- mpi wrappers -----------------------
# Build libmpiwrap.so for the primary target, and for the secondary
# target if relevant.
#
# This is really horrible.
#
# Don't let automake install this, since it puts the .so's in the
# wrong place.  Instead install them ourselves in the right
# place using the install-exec-local target below.
#
# Also, automake isn't good at supporting non-$(CC) compilers.
# But we need to use $(MPI_CC) here.  Hence the nasty hack of
# directly saying how to build libmpiwrap-*.so, instead of
# using automake's standard gunk.
#
@VGO_AIX5_TRUE@HACKY_FLAGS_PRI = -g -O -bE:libmpiwrap_aix5.exp -bM:SRE -bnoentry \
@VGO_AIX5_TRUE@			-qflag=w:w \
@VGO_AIX5_TRUE@			`echo $(AM_FLAG_M3264_PRI) | sed s/maix/q/g`

@VGO_AIX5_FALSE@HACKY_FLAGS_SEC = -g -O -fno-omit-frame-pointer -Wall -fpic -shared \
@VGO_AIX5_FALSE@			$(AM_FLAG_M3264_SEC)

@VGO_AIX5_TRUE@HACKY_FLAGS_SEC = -g -O -bE:libmpiwrap_aix5.exp -bM:SRE -bnoentry \
@VGO_AIX5_TRUE@			-qflag=w:w \
@VGO_AIX5_TRUE@			`echo $(AM_FLAG_M3264_SEC) | sed s/maix/q/g`

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/Makefile.all.am $(top_srcdir)/Makefile.core.am $(top_srcdir)/Makefile.flags.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  auxprogs/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  auxprogs/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
@BUILD_MPIWRAP_PRI_FALSE@libmpiwrap-@VG_PLATFORM_PRI@.so$(EXEEXT): $(libmpiwrap_@VG_PLATFORM_PRI@_so_OBJECTS) $(libmpiwrap_@VG_PLATFORM_PRI@_so_DEPENDENCIES) 
@BUILD_MPIWRAP_PRI_FALSE@	@rm -f libmpiwrap-@VG_PLATFORM_PRI@.so$(EXEEXT)
@BUILD_MPIWRAP_PRI_FALSE@	$(LINK) $(libmpiwrap_@VG_PLATFORM_PRI@_so_LDFLAGS) $(libmpiwrap_@VG_PLATFORM_PRI@_so_OBJECTS) $(libmpiwrap_@VG_PLATFORM_PRI@_so_LDADD) $(LIBS)
@BUILD_MPIWRAP_SEC_FALSE@libmpiwrap-@VG_PLATFORM_SEC@.so$(EXEEXT): $(libmpiwrap_@VG_PLATFORM_SEC@_so_OBJECTS) $(libmpiwrap_@VG_PLATFORM_SEC@_so_DEPENDENCIES) 
@BUILD_MPIWRAP_SEC_FALSE@	@rm -f libmpiwrap-@VG_PLATFORM_SEC@.so$(EXEEXT)
@BUILD_MPIWRAP_SEC_FALSE@	$(LINK) $(libmpiwrap_@VG_PLATFORM_SEC@_so_LDFLAGS) $(libmpiwrap_@VG_PLATFORM_SEC@_so_OBJECTS) $(libmpiwrap_@VG_PLATFORM_SEC@_so_LDADD) $(LIBS)
valgrind-listener$(EXEEXT): $(valgrind_listener_OBJECTS) $(valgrind_listener_DEPENDENCIES) 
	@rm -f valgrind-listener$(EXEEXT)
	$(LINK) $(valgrind_listener_LDFLAGS) $(valgrind_listener_OBJECTS) $(valgrind_listener_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmpiwrap-@VG_PLATFORM_PRI@.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libmpiwrap-@VG_PLATFORM_SEC@.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/valgrind_listener-valgrind-listener.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

valgrind_listener-valgrind-listener.o: valgrind-listener.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_listener_CPPFLAGS) $(CPPFLAGS) $(valgrind_listener_CFLAGS) $(CFLAGS) -MT valgrind_listener-valgrind-listener.o -MD -MP -MF "$(DEPDIR)/valgrind_listener-valgrind-listener.Tpo" -c -o valgrind_listener-valgrind-listener.o `test -f 'valgrind-listener.c' || echo '$(srcdir)/'`valgrind-listener.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/valgrind_listener-valgrind-listener.Tpo" "$(DEPDIR)/valgrind_listener-valgrind-listener.Po"; else rm -f "$(DEPDIR)/valgrind_listener-valgrind-listener.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='valgrind-listener.c' object='valgrind_listener-valgrind-listener.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_listener_CPPFLAGS) $(CPPFLAGS) $(valgrind_listener_CFLAGS) $(CFLAGS) -c -o valgrind_listener-valgrind-listener.o `test -f 'valgrind-listener.c' || echo '$(srcdir)/'`valgrind-listener.c

valgrind_listener-valgrind-listener.obj: valgrind-listener.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_listener_CPPFLAGS) $(CPPFLAGS) $(valgrind_listener_CFLAGS) $(CFLAGS) -MT valgrind_listener-valgrind-listener.obj -MD -MP -MF "$(DEPDIR)/valgrind_listener-valgrind-listener.Tpo" -c -o valgrind_listener-valgrind-listener.obj `if test -f 'valgrind-listener.c'; then $(CYGPATH_W) 'valgrind-listener.c'; else $(CYGPATH_W) '$(srcdir)/valgrind-listener.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/valgrind_listener-valgrind-listener.Tpo" "$(DEPDIR)/valgrind_listener-valgrind-listener.Po"; else rm -f "$(DEPDIR)/valgrind_listener-valgrind-listener.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='valgrind-listener.c' object='valgrind_listener-valgrind-listener.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(valgrind_listener_CPPFLAGS) $(CPPFLAGS) $(valgrind_listener_CFLAGS) $(CFLAGS) -c -o valgrind_listener-valgrind-listener.obj `if test -f 'valgrind-listener.c'; then $(CYGPATH_W) 'valgrind-listener.c'; else $(CYGPATH_W) '$(srcdir)/valgrind-listener.c'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/..
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-local \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS install-exec-local

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-local clean-noinstPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-exec-local install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am


# The kludge that passes for vex's build system can't handle parallel
# builds.  So, for the time being, serialise all Valgrind building.
# (this is equivalent to enforcing "make -j 1".
.NOTPARALLEL:
@BUILD_MPIWRAP_PRI_TRUE@libmpiwrap-@VG_PLATFORM_PRI@.so: libmpiwrap.c
@BUILD_MPIWRAP_PRI_TRUE@	$(MPI_CC) $(HACKY_FLAGS_PRI) \
@BUILD_MPIWRAP_PRI_TRUE@		-I../include \
@BUILD_MPIWRAP_PRI_TRUE@		-o libmpiwrap-@VG_PLATFORM_PRI@.so libmpiwrap.c
@BUILD_MPIWRAP_SEC_TRUE@libmpiwrap-@VG_PLATFORM_SEC@.so: libmpiwrap.c
@BUILD_MPIWRAP_SEC_TRUE@	$(MPI_CC) $(HACKY_FLAGS_SEC) \
@BUILD_MPIWRAP_SEC_TRUE@		-I../include \
@BUILD_MPIWRAP_SEC_TRUE@		-o libmpiwrap-@VG_PLATFORM_SEC@.so libmpiwrap.c

# The following install hack is serialised by "libmpiwrap.so".
# Hence force -j 1.
.NOTPARALLEL:

install-exec-local:
# convert (eg) X86_LINUX to x86-linux
# really should use sed here, rather than assume tr is available
@BUILD_MPIWRAP_PRI_TRUE@	pD=`echo @VG_PLATFORM_PRI@ | tr A-Z_ a-z-` ; \
@BUILD_MPIWRAP_PRI_TRUE@		$(mkinstalldirs) $(DESTDIR)$(valdir)/$$pD; \
@BUILD_MPIWRAP_PRI_TRUE@	rm -f ./libmpiwrap.so; \
@BUILD_MPIWRAP_PRI_TRUE@	cp ./libmpiwrap-@VG_PLATFORM_PRI@.so ./libmpiwrap.so; \
@BUILD_MPIWRAP_PRI_TRUE@	$(INSTALL_PROGRAM) ./libmpiwrap.so \
@BUILD_MPIWRAP_PRI_TRUE@		$(DESTDIR)$(valdir)/$$pD; \
@BUILD_MPIWRAP_PRI_TRUE@	rm -f ./libmpiwrap.so
@BUILD_MPIWRAP_SEC_TRUE@	pD=`echo @VG_PLATFORM_SEC@ | tr A-Z_ a-z-` ; \
@BUILD_MPIWRAP_SEC_TRUE@	$(mkinstalldirs) $(DESTDIR)$(valdir)/$$pD; \
@BUILD_MPIWRAP_SEC_TRUE@	rm -f ./libmpiwrap.so; \
@BUILD_MPIWRAP_SEC_TRUE@	cp ./libmpiwrap-@VG_PLATFORM_SEC@.so ./libmpiwrap.so; \
@BUILD_MPIWRAP_SEC_TRUE@	$(INSTALL_PROGRAM) ./libmpiwrap.so \
@BUILD_MPIWRAP_SEC_TRUE@		$(DESTDIR)$(valdir)/$$pD; \
@BUILD_MPIWRAP_SEC_TRUE@	rm -f ./libmpiwrap.so

#nodist_SOURCES        = libmpiwrap-@VG_PLATFORM_PRI@.c
#nodist_SOURCES        = libmpiwrap-@VG_PLATFORM_SEC@.c

libmpiwrap-.c:
	rm -f libmpiwrap-.c
	touch libmpiwrap-.c

libmpiwrap-@VG_PLATFORM_PRI@.c:
	rm -f libmpiwrap-@VG_PLATFORM_PRI@.c
	touch libmpiwrap-@VG_PLATFORM_PRI@.c

@VGP_HAVE_SECONDARY_TRUE@libmpiwrap-@VG_PLATFORM_SEC@.c:
@VGP_HAVE_SECONDARY_TRUE@	rm -f libmpiwrap-@VG_PLATFORM_SEC@.c
@VGP_HAVE_SECONDARY_TRUE@	touch libmpiwrap-@VG_PLATFORM_SEC@.c

clean-local:
	rm -f libmpiwrap-.c \
	libmpiwrap-@VG_PLATFORM_PRI@.c libmpiwrap-@VG_PLATFORM_SEC@.c

#
#----------------------------------------------------------
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
